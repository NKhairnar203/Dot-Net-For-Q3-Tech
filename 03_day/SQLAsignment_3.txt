
*************  Easy Level  ******************

Q1: What is a primary key in a database, and why is it important? Provide an example using the students table.
Ans:
  A primary key (PK) is a unique identifier for each record in a table. It ensures that no two rows in a table have the same value for that column and prevents duplicate data.
  example:
    CREATE TABLE students(
      id INT PRIMARY KEY,    -- THIS IS A PRIMARY KEY 
      name VARCHAR(15),
      age INT
    )


Q2: What does the SELECT statement do in MySQL? Write a query to retrieve all records from the students table.
Ans:
  The SELECT statement in MySQL is used to retrieve data from one or more tables. It allows you to fetch specific records from a database based on given conditions.
  Query:
    SELECT *
    FROM students;



Q3: How do you insert data into a table using MySQL? Insert a new student (id: 5, name: Emily, age: 21) into the students table.
Ans:
  In MySQL, the INSERT INTO statement is used to add new records to a table.
  Example:
    INSERT INTO students(id,name,age) 
    VALUES (5,"Emily",21);



Q4: What is the purpose of a foreign key? Explain with respect to the orders table.
Ans:
  A foreign key (FK) is a column (or a set of columns) in one table that creates a relationship between two tables. It references the primary key of another table to ensure referential integrity.
  IN Orders Table CustomerID is a Foreign Key referencing Customers.



Q5: How can you delete a record from the students table where the id = 2?
Ans:
  DELETE FROM students WHERE id = 2;


Q6: What is the difference between DELETE and TRUNCATE in SQL? Provide an example.
Ans:
  Both DELETE and TRUNCATE are used to remove records from a table, but they have key differences in how they work.
  Example:
    DELETE:
      DELETE FROM Students WHERE Name = 'Bob';    -- Remove a specific Row;
    
    TRUNCATE:
      TRUNCATE TABLE Students;    -- Remove all Rows.


Q7: How can you update a student's age? Write a query to update Charlieâ€™s age to 21 in the students table.
Ans:
  Then im using UPDATE. UPDATE for you want a changes in your data that's time you need to UPDATE.
  Example:
    UPDATE students SET age = 21
    WHERE name = 'Charlie';



*********************  Medium Level (4 Questions)  *************************

Q1: Why do we need tabular data instead of storing everything in a single file? Explain the benefits using the students and orders tables.
Ans:
  Storing all data in a single file (like a text file, Excel sheet, or JSON) may seem simple, but it leads to many problems. Instead, using a tabular (relational database) approach with multiple tables improves efficiency, accuracy, and performance.


Q2: Understanding database relationships, how does the customer_id in the orders table relate to the id in the students table? Why is this important?
Ans:
  In a relational database, relationships between tables help keep data organized, consistent, and efficient. The customer_id in the Orders table relates to the id in the Students table as a foreign key, creating a one-to-many relationship.

  Why is this important?
    Avoids Data Duplication:
      - No need to store student details repeatedly in the Orders table.
    Ensures Data Integrity:
      - customer_id must match an existing id in Students (avoids orphaned orders).
    Efficient Data Retrieval:
      - Use JOIN to fetch student & order details together.
    Simplifies Updates:
      - If a student's name changes, update only in Students.


Q3: Write an SQL query to find all orders placed after January 12, 2025.
Ans:
  SELECT * FROM orders WHERE order_date > '2025-01-12';


Q4: Write an SQL query to delete all records from the orders table where the order_status is "Cancelled".
Ans:
  DELETE FROM orders WHERE order_status = 'cancelled';



****************************   Hard Level (2 Questions)  ***************************** 

Q1: Write an SQL query to find the total number of orders placed by each student, showing the results in ascending order of total orders.
Ans:
  select customer_id, count(customer_id) as total_number_of_orders from orders group by customer_id order by total_number_of_orders asc;
  


Q2: Write an SQL query to display all students who have not placed any orders.
Ans: 
  select * from students where id not in (select customer_id from orders);